[dataset]
# MNIST, FashionMNIST, CIFAR10, ImageNet,
dataset = MNIST
batch_size = 100

[model]
# ResNet for MNIST, FashionMNIST, CIFAR10, ImageNet
# model in torchvision.models for ImageNet

model = ResNet
retrain = 1
test = 1

[data_sampling]
# sampling
# Select the sampling method:
# 0: random sampling: randomly sampling uniformly.
# 1: balance sampling: sampling the same number of data from each label;
sampling = 1

# total number of samples for generating adversarial_examples
batch_train_natural_samples = 60
batch_train_adversarial_samples = 60
batch_test_natural_samples = 10
batch_test_adversarial_samples = 10

[attack]
# attack_method: Check https://github.com/Harry24k/adversarial-attacks-pytorch to see what attack method we already offer;
train_attack_method = CW
test_attack_method = CW
[train_attack_parameters]
# parameter for attack: different attack_method have different parameters. Write one line for each parameter 
# FGSM:{eps: perturbation level}
;eps = 0.0627
# iFGSM:{}
;
# CW
c = 0.4

[test_attack_parameters]
# parameter for attack: different attack_method have different parameters
# FGSM:{eps: perturbation level}
;eps = 0.0627
# iFGSM:{}
;
# CW
c = 0.4

[squeezer]
s1 = ColorDepthSqueezer
s2 = ColorDepthSqueezer
[squeezer_parameters_s1]
s = 8
[squeezer_parameters_s2]
s = 16

[classifier]
;c1 = LinearClassifier
;c2 = LinearClassifier
;c1 = BayesClassifier
;c2 = BayesClassifier
;c1 = ImageNetClassifier
;c2 = ImageNetClassifier
c1 = NNClassifier
c2 = NNClassifier
;c1 = Cifar10Classifier
;c2 = Cifar10Classifier
[classifier_parameters_c1]
num_epochs=20
learning_rate=2e-4
batch_size=100
;mode=FPR
;param=0.05
[classifier_parameters_c2]
num_epochs=20
learning_rate=2e-4
batch_size=100
;mode=FPR
;param=0.05
[detector]
# Hawkeye
name = Hawkeye
# Output: logits or probabilities
output = logits

[generator]
# adversarial generator
num_train = 6000
num_test = 1000

