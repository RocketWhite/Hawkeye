[dataset]
# MNIST, FashionMNIST, CIFAR10, ImageNet,
dataset = FashionMNIST
batch_size = 100

[model]
# ResNet
model = ResNet
retrain = 1
test = 1

[data_sampling]
# sampling
# Select the sampling method:
# 0: random sampling: randomly sampling uniformly.
# 1: balance sampling: sampling the same number of data from each label;
sampling = 1

# total number of samples for generating adversarial_examples
batch_train_natural_samples = 200
batch_train_adversarial_samples = 200
batch_test_natural_samples = 10
batch_test_adversarial_samples = 10

[generator]
# adversarial generator
num_train = 6000
num_test = 1000

[attack]
# attack_method: FGSM, iFGSM, CarliniWagnerL0, CarliniWagnerL2, CarliniWagnerLi
train_attack_method = CW
test_attack_method = CW
[train_attack_parameters]
# parameter for attack: different attack_method have different parameters
# FGSM:{eps: perturbation level}
#eps = 0.0627
# iFGSM:{}
# CarliniWagnerL0
# CarliniWagnerL2
c = 0.4

# CarliniWagnerL

[test_attack_parameters]
# parameter for attack: different attack_method have different parameters
# FGSM:{eps: perturbation level}
# eps = 0.0627
# iFGSM:{}
# CarliniWagnerL0
# CarliniWagnerL2
c = 0.4

[squeezer]
s1 = ColorDepthSqueezer
s2 = ColorDepthSqueezer
[squeezer_parameters_s1]
s = 32
[squeezer_parameters_s2]
s = 64

[classifier]
c1 = NNClassifier
c2 = NNClassifier
# c1 = ImageNetClassifier
# c2 = ImageNetClassifier
[classifier_parameters_c1]
# learning_rate = 2e-4
# epoch = 10
[classifier_parameters_c2]
# learning_rate = 2e-4
# epoch = 10

[detector]
# Hawkeye
name = Hawkeye


